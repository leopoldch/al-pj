services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "3000"
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - backend

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - ALLOWED_CORS=${ALLOWED_CORS}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_ACCESS_SECRET=${AWS_ACCESS_SECRET}
      - AWS_REGION=${AWS_REGION}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
      - REDIS_HOST=redis
    expose:
      - "8000"
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - static_data:/app/static

      
  nginx:
    image: nginx:latest
    ports:
      - "5002:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_data:/app/static:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped
  

networks:
  app-network:
    driver: bridge

volumes:
  static_data:
