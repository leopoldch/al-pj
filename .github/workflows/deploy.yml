name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - run: npm ci
        working-directory: frontend

      - run: npm test -- --watchAll=false
        working-directory: frontend

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - run: pip install poetry

      - run: poetry install --only main
        working-directory: backend

      - run: USE_SQLITE=True SECRET_KEY=dummy python manage.py test
        working-directory: backend

  deploy:
    needs: test
    runs-on: self-hosted
    env:
      DEBUG: ${{ secrets.DEBUG }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      ALLOWED_CORS: ${{ secrets.ALLOWED_CORS }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      MAIL_HOST: ${{ secrets.MAIL_HOST }}
      MAIL_PORT: ${{ secrets.MAIL_PORT }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}

    steps:
      - uses: actions/checkout@v4

      - run: |
          docker-compose down --volumes --remove-orphans || true
          docker system prune -f || true

      - run: |
          DEBUG=${DEBUG} \
          SECRET_KEY=${SECRET_KEY} \
          ALLOWED_HOSTS=${ALLOWED_HOSTS} \
          ALLOWED_CORS=${ALLOWED_CORS} \
          DATABASE_NAME=${DATABASE_NAME} \
          DATABASE_PASSWORD=${DATABASE_PASSWORD} \
          DATABASE_USERNAME=${DATABASE_USERNAME} \
          DATABASE_HOST=${DATABASE_HOST} \
          DATABASE_PORT=${DATABASE_PORT} \
          MAIL_HOST=${MAIL_HOST} \
          MAIL_PORT=${MAIL_PORT} \
          MAIL_USERNAME=${MAIL_USERNAME} \
          MAIL_PASSWORD=${MAIL_PASSWORD} \
          docker-compose up --build -d
